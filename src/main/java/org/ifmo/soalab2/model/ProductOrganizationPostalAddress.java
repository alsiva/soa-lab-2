/*
 * SOA LAB 1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.ifmo.soalab2.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.util.Objects;

/**
 * ProductOrganizationPostalAddress
 */
@XmlRootElement(name = "ProductOrganizationPostalAddress")
@XmlAccessorType(XmlAccessType.FIELD)
public class ProductOrganizationPostalAddress implements Serializable {

  private String zipcode;

  public ProductOrganizationPostalAddress(String zipcode) {
    this.zipcode = zipcode;
  }

  /**
   * Get zipcode
   * @return zipcode
   **/
  @Schema(example = "63101", description = "")
  public String getZipcode() {
    return zipcode;
  }

  public void setZipcode(String zipcode) {
    this.zipcode = zipcode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductOrganizationPostalAddress productOrganizationPostalAddress = (ProductOrganizationPostalAddress) o;
    return Objects.equals(this.zipcode, productOrganizationPostalAddress.zipcode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(zipcode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductOrganizationPostalAddress {\n");
    
    sb.append("    zipcode: ").append(toIndentedString(zipcode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
