/*
 * SOA LAB 1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.ifmo.soalab2.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;

import javax.validation.Valid;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.util.Objects;

/**
 * ProductWithoutDate
 */
@XmlRootElement(name = "Product")
@XmlAccessorType(XmlAccessType.FIELD)
public class ProductWithoutDate implements Serializable {

    @XmlElement(name = "name")
    private String name;

    @XmlElement(name = "coordinates")
    private ProductCoordinates coordinates;
    private Float price;
    private Long manufactureCost;
    private UnitOfMeasure unitOfMeasure;
    @XmlElement(name = "organization")
    private ProductOrganization organization;


    public ProductWithoutDate(String name, ProductCoordinates coordinates, Float price, Long manufactureCost, UnitOfMeasure unitOfMeasure, ProductOrganization organization) {
        this.name = name;
        this.coordinates = coordinates;
        this.price = price;
        this.manufactureCost = manufactureCost;
        this.unitOfMeasure = unitOfMeasure;
        this.organization = organization;
    }

    public ProductWithoutDate() {
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(example = "Ice cream", description = "")
    @Size(min = 1)
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }


    /**
     * Get coordinates
     *
     * @return coordinates
     **/
    @Schema(description = "")
    @Valid
    public ProductCoordinates getCoordinates() {
        return coordinates;
    }

    public void setCoordinates(ProductCoordinates coordinates) {
        this.coordinates = coordinates;
    }

    public ProductWithoutDate price(Float price) {
        this.price = price;
        return this;
    }

    /**
     * Get price
     * minimum: 1
     *
     * @return price
     **/
    @Schema(description = "")
    @DecimalMin("1")
    public Float getPrice() {
        return price;
    }

    public void setPrice(Float price) {
        this.price = price;
    }

    public ProductWithoutDate manufactureCost(Long manufactureCost) {
        this.manufactureCost = manufactureCost;
        return this;
    }

    /**
     * Get manufactureCost
     *
     * @return manufactureCost
     **/
    @Schema(example = "300", description = "")
    public Long getManufactureCost() {
        return manufactureCost;
    }

    public void setManufactureCost(Long manufactureCost) {
        this.manufactureCost = manufactureCost;
    }

    /**
     * Get unitOfMeasure
     *
     * @return unitOfMeasure
     **/
    @Schema(example = "METERS", description = "")
    public UnitOfMeasure getUnitOfMeasure() {
        return unitOfMeasure;
    }

    public void setUnitOfMeasure(UnitOfMeasure unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
    }


    /**
     * Get organization
     *
     * @return organization
     **/
    @Schema(description = "")
    @Valid
    public ProductOrganization getOrganization() {
        return organization;
    }

    public void setOrganization(ProductOrganization organization) {
        this.organization = organization;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProductWithoutDate productWithoutDate = (ProductWithoutDate) o;
        return Objects.equals(this.name, productWithoutDate.name) &&
                Objects.equals(this.coordinates, productWithoutDate.coordinates) &&
                Objects.equals(this.price, productWithoutDate.price) &&
                Objects.equals(this.manufactureCost, productWithoutDate.manufactureCost) &&
                Objects.equals(this.unitOfMeasure, productWithoutDate.unitOfMeasure) &&
                Objects.equals(this.organization, productWithoutDate.organization);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, coordinates, price, manufactureCost, unitOfMeasure, organization);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ProductWithoutDate {\n");

        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
        sb.append("    price: ").append(toIndentedString(price)).append("\n");
        sb.append("    manufactureCost: ").append(toIndentedString(manufactureCost)).append("\n");
        sb.append("    unitOfMeasure: ").append(toIndentedString(unitOfMeasure)).append("\n");
        sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
